/*
2.	Com a proposta para ampliação da terceirização da mão de obra, o Ministério da Fazenda está empenhado em elaborar uma análise sobre o recebimento de salário regular através do registro em carteira profissional dos funcionários no país. Assim, elabore um algoritmo que obtenha, para cada assalariado, com carteira profissional assinada, o seu sexo M(masculino) e F(feminino) e o valor de seu salário, devendo este salário ser maior que um real (R$1,00). Seu algoritmo deverá analisar e classificar este assalariado em Acima, Igual ou Abaixo do salário mínimo. Sabe-se que o salário mínimo nacional é de R$ 1400,00. Após a leitura dos dados de cada assalariado cadastrado pelo ministério deverá ser apresentado o seu salário em reais, a classificação por extenso em relação ao salário mínimo e o sexo por extenso (Masculino ou Feminino).
A classificação em relação ao salário mínimo nacional deverá ser feita pelo sub-algoritmo classificaSalario e os resultados solicitados para cada assalariado deverão ser apresentados pelo sub-algoritmo denominado mostraClassifica. 
Você deverá fazer a entrada de dados para todos os assalariados que foram pesquisados pelo ministério, lembrando de fazer sempre a validação de todos os dados informados em sub-algoritmos específicos.   
Na solução deste problema os resultados finais de cada assalariado que participou desta pesquisa deverão ser apresentados.
Após a leitura dos dados de todos os assalariados pesquisados o seu algoritmo deverá apresentar a quantidade de assalariados com salário abaixo do salário mínimo e a quantidade assalariados com salário acima do salário mínimo*/


#include <stdio.h>

// Sub-algoritmo para validar a quantidade de peças fabricadas
int validaQuantidade(int qtd_pecas) {
  // Verifica se a quantidade de peças é válida
  if (qtd_pecas < 0 || qtd_pecas > 100) {
    return 0;
  }

  return 1;
}

// Sub-algoritmo para calcular o salário total
float calculaSalario(int qtd_pecas, float salario_base) {
  // Calcula o adicional de produtividade
  float adicional_produtividade = 0.0;
  if (qtd_pecas > 50) {
    if (qtd_pecas <= 80) {
      adicional_produtividade = (qtd_pecas - 50) * 0.50;
    } else {
      adicional_produtividade = (qtd_pecas - 50) * 0.50 + (qtd_pecas - 80) * 0.75;
    }
  }

  // Calcula o salário total
  float salario_total = salario_base + adicional_produtividade;

  return salario_total;
}

// Procedimento para mostrar o resultado final
void mostraFinal(int qtd_funcionarios, float salario_total, char sexo) {
  // Mostra o salário total
  printf("Salario total: R$%.2f\n", salario_total);

  // Mostra a classificação do salário
  if (salario_total > 1400.0) {
    printf("Classificacao: Acima do salario minimo\n");
  } else if (salario_total == 1400.0) {
    printf("Classificacao: Igual ao salário minimo\n");
  } else {
    printf("Classificacao: Abaixo do salario minimo\n");
  }

  // Mostra o sexo
  printf("Sexo: %c\n", sexo);
}

int main() {
  // Variáveis para armazenar os dados do funcionário
  int qtd_pecas;
  float salario_base = 1000.0;
  char sexo;

  // Contador de funcionários
  int qtd_funcionarios = 0;

  // Laço para ler os dados de todos os funcionários
  do {
    // Lê a quantidade de peças fabricadas
    printf("Quantidade de pecas fabricadas: ");
    scanf("%d", &qtd_pecas);

    // Valida a quantidade de peças
    if (validaQuantidade(qtd_pecas)) {
      // Lê o sexo do funcionário
      printf("Sexo (M/F): ");
      scanf(" %c", &sexo);

      // Calcula o salário total
      float salario_total = calculaSalario(qtd_pecas, salario_base);

      // Mostra o resultado final
      mostraFinal(qtd_funcionarios, salario_total, sexo);

      // Incrementa o contador de funcionários
      qtd_funcionarios++;
    }
  } while (qtd_pecas != -1);

  // Exibe a quantidade de funcionários com salário abaixo do salário mínimo
  printf("Quantidade de funcionarios com salario abaixo do salario minimo: %d\n", qtd_funcionarios);

  return 0;
}
